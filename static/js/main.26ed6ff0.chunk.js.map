{"version":3,"sources":["SingleColor.js","App.js","index.js"],"names":["SingleColor","rgb","weight","index","hexColor","useState","alert","setAlert","bgColor","join","hexValue","useEffect","timeout","setTimeout","clearTimeout","onClick","navigator","clipboard","writeText","className","style","backgroundColor","App","color","setColor","error","setError","Values","all","list","setList","onSubmit","e","preventDefault","colors","err","console","log","type","value","onChange","target","placeholder","map","oneColor","hex","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAoCeA,EAlCK,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,IAAKC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAAe,EAC5BC,oBAAS,GADmB,mBAC/CC,EAD+C,KACxCC,EADwC,KAGhDC,EAAUP,EAAIQ,KAAK,KAEnBC,EAAQ,WAAON,GAErBO,qBAAU,WACN,IAAMC,EAAUC,YAAW,WACvBN,GAAS,KACV,MAEH,OAAO,kBAAMO,aAAaF,MAC3B,CAACN,IAOJ,OACI,0BACIS,QAPY,WAChBR,GAAS,GACTS,UAAUC,UAAUC,UAAUR,IAM1BS,UAAS,gBAAWhB,EAAQ,IAAM,eAClCiB,MAAO,CAAEC,gBAAgB,OAAD,OAASb,EAAT,MAH5B,UAKI,oBAAGW,UAAU,gBAAb,UAA8BjB,EAA9B,OACA,mBAAGiB,UAAU,cAAb,SAA4BT,IAE3BJ,GAAS,mBAAGa,UAAU,QAAb,qC,gBCgCPG,MA1Df,WAAgB,IAAD,EACYjB,mBAAS,IADrB,mBACPkB,EADO,KACAC,EADA,OAEYnB,oBAAS,GAFrB,mBAEPoB,EAFO,KAEAC,EAFA,OAGUrB,mBAAS,IAAIsB,IAAO,WAAWC,IAAI,KAH7C,mBAGPC,EAHO,KAGDC,EAHC,KAuBd,OACC,iCACC,0BAASX,UAAU,YAAnB,UACC,iDACA,uBAAMY,SAjBY,SAAAC,GACpBA,EAAEC,iBACFP,GAAS,GAET,IACC,IAAIQ,EAAS,IAAIP,IAAOJ,GAAOK,IAAI,IACnCE,EAAQI,GACP,MAAOC,GACRT,GAAS,GACTU,QAAQC,IAAIF,KAQX,UACC,uBACCG,KAAK,OACLC,MAAOhB,EACPiB,SAAW,SAAAR,GAAC,OAAIR,EAASQ,EAAES,OAAOF,QAClCG,YAAY,UACZvB,UAAWM,EAAQ,QAAU,OAE9B,wBAAQN,UAAU,MAAMmB,KAAK,SAA7B,0BAMF,yBAASnB,UAAU,SAAnB,SACEU,EAAKc,KAAK,SAACC,EAAUzC,GAErB,OACC,cAAC,EAAD,2BAEKyC,GAFL,IAGCzC,MAAOA,EACPC,SAAUwC,EAASC,MAHd1C,YC9CZ2C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.26ed6ff0.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst SingleColor = ({ rgb, weight, index, hexColor }) => {\r\n    const [alert, setAlert] = useState(false)\r\n\r\n    const bgColor = rgb.join(',')\r\n    // console.log(bgColor); <<< [255, 255, 255]\r\n    const hexValue = `#${hexColor}`;\r\n\r\n    useEffect(() => {\r\n        const timeout = setTimeout(() => {\r\n            setAlert(false)\r\n        }, 2400)\r\n\r\n        return () => clearTimeout(timeout)\r\n    }, [alert])\r\n\r\n    const handleClick = () => {\r\n        setAlert(true);\r\n        navigator.clipboard.writeText(hexValue);\r\n    }\r\n\r\n    return (\r\n        <article\r\n            onClick={handleClick}\r\n            className={`color ${index > 10 && 'color-light'}`}\r\n            style={{ backgroundColor: `rgb(${bgColor})`}}   \r\n        >\r\n            <p className='percent-value'>{weight}%</p>            \r\n            <p className='color-value'>{hexValue}</p>\r\n\r\n            {alert && <p className='alert'>copied to clipboard</p>}         \r\n        </article>\r\n    )\r\n}\r\n\r\nexport default SingleColor\r\n","import React, { useState } from 'react';\nimport SingleColor from './SingleColor';\n\nimport Values from 'values.js';\n\nfunction App() {\n\tconst [color, setColor] = useState('')\n\tconst [error, setError] = useState(false)\n\tconst [list, setList] = useState(new Values('#f15025').all(10))\n\n\t// This all(10) means 'get 10 lighter shades and 10 darker'\n\t// We can change it to 20 (get 5 lighter and 5 darker)\n\t// Or 1 (get 100 lighter and 100 darker shades)\n\t// It is a percentage: 10 = 1/10; 20 = 1/5; 1 = 1/100\n\n\tconst handleSubmit = e => {\n\t\te.preventDefault();\n\t\tsetError(false);\n\n\t\ttry {\n\t\t\tlet colors = new Values(color).all(10)\n\t\t\tsetList(colors);\t\t\t\n\t\t} catch (err) {\n\t\t\tsetError(true);\n\t\t\tconsole.log(err);\t\n\t\t}\t\n\t}\n\n\treturn (\n\t\t<main>\n\t\t\t<section className='container'>\n\t\t\t\t<h3>color generator</h3>\n\t\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype='text' \n\t\t\t\t\t\tvalue={color}\n\t\t\t\t\t\tonChange={ e => setColor(e.target.value) }\n\t\t\t\t\t\tplaceholder='#f15025'\n\t\t\t\t\t\tclassName={error ? 'error' : null}\n\t\t\t\t\t/>\n\t\t\t\t\t<button className='btn' type='submit'>\n\t\t\t\t\t\tsubmit\n\t\t\t\t\t</button>\n\t\t\t\t</form>\n\t\t\t</section>\n\n\t\t\t<section className='colors'>\n\t\t\t\t{list.map( (oneColor, index) => {\n\t\t\t\t\t// console.log(oneColor); <<< to see params\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<SingleColor \n\t\t\t\t\t\t\tkey={index} \n\t\t\t\t\t\t\t{...oneColor} \n\t\t\t\t\t\t\tindex={index} \n\t\t\t\t\t\t\thexColor={oneColor.hex}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</section>\n\t\t</main>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}